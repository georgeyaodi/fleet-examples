# Copyright (c) 2023, NVIDIA CORPORATION.  All rights reserved.
#
# NVIDIA CORPORATION and its licensors retain all intellectual property
# and proprietary rights in and to this software, related documentation
# and any modifications thereto.  Any use, reproduction, disclosure or
# distribution of this software and related documentation without an express
# license agreement from NVIDIA CORPORATION is strictly prohibited.

Component:
  app-version: 0.0.1
  description: default description
  helmUrlLocationPath: https://helm.ngc.nvidia.com/myorg/myteam/charts
  name: retriever-canonical
  version: 0.0.1
affinity: {}
applicationSpecs:
  canonical-deployment:
    apptype: stateless
    initContainers:
    - name: init-check
      imagePullPolicy: IfNotPresent
      image: nvcr.io/nvidia/blueprint/aiva-customer-service-ingest-client:1.1.0
      command:
      - /bin/bash
      - -c
      - |
        until curl -sf ranking-ms-ranking-deployment-ranking-service:1976/v1/health/ready  && curl -sf nemollm-embedding-embedding-deployment-embedding-service:9080/v1/health/ready && curl -sf milvus-milvus-deployment-milvus-service:9091/healthz ; do
          echo "Waiting for all APIs to be healthy..."
          sleep 10
        done
        echo "Grace time for all services to be ready after health check passes.."
        sleep 30
    containers:
      retriever-canonical:
        args:
        - --port
        - '8081'
        - --host
        - 0.0.0.0
        - --workers
        - '32'
        env:
        - name: EXAMPLE_PATH
          value: src/retrievers/unstructured_data
        - name: APP_VECTORSTORE_URL
          value: $egress.milvus.address:$egress.milvus.port
        - name: APP_VECTORSTORE_NAME
          value: milvus
        - name: APP_LLM_MODELNAME
          value: meta/llama-3.2-1b-instruct
        - name: APP_LLM_MODELENGINE
          value: nvidia-ai-endpoints
        - name: APP_LLM_SERVERURL
          value: $egress.llm-nim.address:$egress.llm-nim.port
        - name: APP_EMBEDDINGS_MODELNAME
          value: nvidia/nv-embedqa-e5-v5
        - name: APP_EMBEDDINGS_MODELENGINE
          value: nvidia-ai-endpoints
        - name: APP_EMBEDDINGS_SERVERURL
          value: $egress.embedding-nim.address:$egress.embedding-nim.port
        - name: APP_RANKING_MODELNAME
          value: nvidia/nv-rerankqa-mistral-4b-v3
        - name: APP_RANKING_MODELENGINE
          value: nvidia-ai-endpoints
        - name: APP_RANKING_SERVERURL
          value: $egress.ranking-nim.address:$egress.ranking-nim.port
        - name: APP_TEXTSPLITTER_MODELNAME
          value: Snowflake/snowflake-arctic-embed-l
        - name: APP_TEXTSPLITTER_CHUNKSIZE
          value: '506'
        - name: APP_TEXTSPLITTER_CHUNKOVERLAP
          value: '200'
        - name: NVIDIA_API_KEY
          value: ""
        - name: COLLECTION_NAME
          value: unstructured_data
        - name: APP_RETRIEVER_TOPK
          value: '4'
        - name: APP_RETRIEVER_SCORETHRESHOLD
          value: '0.25'
        - name: VECTOR_DB_TOPK
          value: '20'
        - name: LOGLEVEL
          value: INFO
        image:
          pullPolicy: IfNotPresent
          repository: nvcr.io/nvidia/blueprint/aiva-customer-service-unstructured-retriever
          tag: 1.1.0
        ports:
        - containerPort: 8081
          name: http
    services:
      canonical-service:
        # externalTrafficPolicy: Local
        ports:
        - name: http-api
          # nodePort: 30086
          port: 8086
          targetPort: 8081
        # type: NodePort
defaultVolumeMounts:
- mountPath: /opt/workload-config
  name: workload-cm-volume
- mountPath: /opt/configs
  name: configs-volume
- mountPath: /opt/scripts
  name: scripts-cm-volume
defaultVolumes:
- configMap:
    name: retriever-canonical-workload-cm
  name: workload-cm-volume
- configMap:
    name: retriever-canonical-configs-cm
  name: configs-volume
- configMap:
    name: retriever-canonical-scripts-cm
  name: scripts-cm-volume
egress:
  embedding-nim:
    address: <PLACEHOLDER>
    port: 0
  llm-nim:
    address: <PLACEHOLDER>
    port: 0
  milvus:
    address: <PLACEHOLDER>
    port: 0
  ranking-nim:
    address: <PLACEHOLDER>
    port: 0
externalFiles: []
image:
  pullPolicy: IfNotPresent
# imagePullSecrets:
# - name: ngc-docker-reg-secret
ingress:
  enabled: false
metrics: {}
nodeSelector: {}
podAnnotations: {}
podSecurityContext: {}
replicaCount: 1
resources: {}
securityContext: {}
storageClaims: {}
tolerations: []
workloadSpecs:
  dummy: {}



configs:
  config.yaml:
    SampleConfig:
      sampleValue: 0

